/* Functions */
.round-corners (@r) {
	border-radius: @r;
	-webkit-border-radius: @r;
	-moz-border-radius: @r;
}

.i-round-corners(@tl, @tr, @br, @bl) {
	-webkit-border-top-left-radius: @tl;
	-moz-border-radius-topleft: @tl;
	border-top-left-radius: @tl;
	
	-webkit-border-top-right-radius: @tr;
	-moz-border-radius-topright: @tr;
	border-top-right-radius: @tr;

	-webkit-border-bottom-right-radius: @br;
	-moz-border-radius-bottomright: @br;
	border-bottom-right-radius: @br;
	
	-webkit-border-bottom-left-radius: @bl;
	-moz-border-radius-bottomleft: @bl;
	border-bottom-left-radius: @bl;
}

.gradient (@gsc, @gec, @gs) {
	background: @gsc;
	zoom:1;
	filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{gsc}', endColorstr='@{gec}')";
	background: -moz-linear-gradient(top, @gsc 0%, @gec @gs);
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, @gsc), color-stop(@gs, @gec));
	background: -webkit-linear-gradient(top, @gsc 0%,@gec @gs);
	background: -o-linear-gradient(top, @gsc 0%,@gec @gs);
	background: -ms-linear-gradient(top, @gsc 0%,@gec @gs);
	background: linear-gradient(top, @gsc 0%,@gec @gs);
}

.adv_gradient (@a:transparent, @b: transparent, @c:transparent, @d:transparent, @e: transparent, @f:transparent, @g:transparent) {
	background: -moz-linear-gradient(top, @a, @b, @c);
	background: -webkit-linear-gradient(top, @a, @b, @c);
	background: -o-linear-gradient(top, @a, @b, @c);
	background: -ms-linear-gradient(top, @a, @b, @c);
	background: linear-gradient(top, @a, @b, @c);
}

.input_focus (@fb, @fc){
	outline: none;
	border-color: fadeIn(@fc, 30%);
	-webkit-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1), 0 0 @fb @fc;
	-moz-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1), 0 0 @fb @fc;
	box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1), 0 0 @fb @fc;
}

.box-shadow (@sty) {
	-webkit-box-shadow: ~"@{sty}";
	-moz-box-shadow: ~"@{sty}";
	box-shadow: ~"@{sty}";
}

.createBtn (@bcl) {
	color: #fff; 
	.gradient( lighten(@bcl, 0%), darken(@bcl, 15%), 100%);
	border-color: darken(@bcl, 15%);
	border-bottom-color: darken(@bcl, 25%);
	text-shadow:0 -.09em .03em rgba(0,0,0,.5);
	.box-shadow ('inset 0 1px 0 rgba(255, 255, 255, 0.2)');

	&:hover {
		.gradient( lighten(@bcl, 10%), darken(@bcl, 15%), 100%); 
		.box-shadow ('0 1px 5px rgba(0, 0, 0, 0.1),  inset 0 1px 0 rgba(255, 255, 255, 0.2), inset 0 0em .5em rgba(255, 255, 255, 0.5)');
		}
	&:active {
		.gradient( darken(@bcl, 7%), lighten(@bcl, 7%),  100%);
		.box-shadow ("inset 0 3px 5px rgba(0,0,0,0.25)")
	}
}

.box-sizing (@bst) {
	-webkit-box-sizing: @bst;
	-moz-box-sizing: @bst;
	-ms-box-sizing: @bst;
	box-sizing: @bst;
}

.make-error (){
	background-color: @caution-bg-color;
	color: #fff;
}

.make-warning (){
	background-color: @warning-bg-color;
	color: #fff;
}

.make-success (){
	background-color: @success-bg-color;
	color: #fff;
}

.make-info (){
	background-color: @info-bg-color;
	color: #fff;
}

.disable (@color) when (lightness(@color) < 60%){
	background: lighten(desaturate(@color,50%),25%);
	box-shadow: none;
	border: none;
	&:hover {
		background: lighten(desaturate(@color,50%),25%);
		cursor: not-allowed;
	}
}

.disable (@color) when (lightness(@color) > 60%){
	background: @color;
	box-shadow: none;
	border: none;
	&:hover {
		background: @color;
		cursor: not-allowed;
	}
}

.disable (){}

.body-font-size (@font-size) when (ispixel(@font-size)) and (@font-size > 0) {
	font-size: @font-size;
}

.body-font-size (@font-size){}

.ink-font-stack () {
	font-family: @font-family;
}